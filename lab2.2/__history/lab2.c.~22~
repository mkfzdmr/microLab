//       CA1 G  F  A  B
//        |  |  |  |  |      -> pins and segments they control
//   ---------    ---------
//   |   A   |    |   A   |
//  F|       |B  F|       |B
//   |---G---|    |---G---|
//  E|       |C  E|       |C
//   |   D   |    |   D   |
//   ---------    ---------
//        |  |  |  |  |      -> pins and segments they control
//        D  DP E  C CA2         

// Segments that make each number when lit:
// 0 => -FEDCBA
// 1 => ----BC-
// 2 => G-ED-BA
// 3 => G--DCBA
// 4 => GF--CB-
// 5 => GF-DC-A
// 6 => GFEDC-A
// 7 => ----CBA
// 8 => GFEDCBA
// 9 => GF-DCBA


#include <stdio.h>
//#include <stdlib.h>
#include "16f877a.h"
#fuses XT,NOWDT,NOPROTECT,NOBROWNOUT,NOLVP, NOPUT, NOWRT, NODEBUG, NOCPD
#use delay(clock=4000000)
#use fast_io(a)
#use fast_io(b)

const char sSegment[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x7F,0x6F };

void main()
{
   setup_psp(PSP_DISABLED);
   setup_timer_1(T1_DISABLED);
   setup_timer_2(T2_DISABLED,0,1);
   setup_adc(ADC_OFF);
   setup_adc_ports(NO_ANALOGS);
   setup_CCP1(CCP_OFF);
   setup_CCP2(CCP_OFF);
   
   
   set_tris_d(0x00);
   set_tris_a(0x00);
   output_d(0x00);
   
   int i=0;
   PORTC=0x00;
   while(1)
   {
  
     int onlarBasamagi = i/10;
     int birlerBasamagi= i%10;
         
         
         output_d(sSegment[birlerBasamagi]);      
         output_high(pin_a3);
         delay_ms(5); output_low(pin_a3);
         output_d(sSegment[onlarBasamagi]);
         output_high(pin_a2);
         delay_ms(5); output_low(pin_a2);
   
         if(flag>=100) 
           {
             i++
           }
         
  
   
   
}
